student: !!seq
 - name
 - age
 - roll_no
 - mobile
 - address

student: [name,age,etc]


# sparse sequence
sparse seq:
 - name
 - 
 - null
 - age 
 - adress


#  nested sequences are also available into this

student:
- 
 - name
 - age
 - marks
 - extra information
-
 - medals
 - language
 - native place
 - etc


# maps that are key valued pairs are actually used into it used in the yaml files
!!map 

student: !!map
name: kunj
info: 
  medals: 1
  desc: very smart you are

# same as above only syntax diffrence
student: !!map
name: kunj
info:  {medals: 1, desc: very smart you are}
 

# keys will have duplicates pairs actually
pair ex: !!pairs
 - name: kunj
 - name: kunal

pair ex: !!pairs [name: kunj,name: kunal]



# sets will allow you only the unique keys not the duplicate once at all

set ex: !!set
 ? name
 ? names


#  if you want to have something like sequence as so you have to use dictionary
person: !!omap
 - kunj:
    ed: ce
    marks: 541
 - manav:
    ed: it
    marks: 798

# reusing some of the properties like pro anchors

hobbies: &hobby
  book: hello
  color: pink


person: 
  name: kunj patel
  <<: * hobby
  color: red

# this will look like something below as noted by the things

person: 
  name: kunj patel
  book: hello
  color: red

